# checks if the lower and upper bounds work
#kashish_agarwal
import cv2
import numpy as np
import time
w = 100
h = 200
x1 = 117
y = 103
lower_bound = np.array([0,70,50])
upper_bound = np.array([20,130,160])
values = np.array([])

cap = cv2.VideoCapture(0)
drawpts=[]
while True:

    ret, frame = cap.read()
    frame = cv2.flip(frame, 1)
    kernel = np.ones((3, 3), np.uint8)
    #frame = cv2.erode(frame,kernel,iterations = 2)
    frame_hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    mask = cv2.inRange(frame_hsv, lower_bound, upper_bound)
    mask = cv2.morphologyEx(mask, cv2.MORPH_CLOSE, kernel)
    #mask = cv2.dilate(mask, kernel, iterations=2)
    mask=cv2.GaussianBlur(mask, (17,17),0)
    res = cv2.bitwise_and(frame, frame, mask = mask)
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    if len(contours)>0:
        cnt=max(contours,key=lambda c: cv2.contourArea(c))
        cnt=cv2.approxPolyDP(cnt,25,True)
        #frame = cv2.drawContours(frame, [cnt], 0, (0, 255, 0), 3)
        hull = cv2.convexHull(cnt, returnPoints=False)
        defects = cv2.convexityDefects(cnt, hull)
        if defects is not None:
            d=defects.shape[0]
            print(d)
            if d==1:
                topmost = tuple(cnt[cnt[:, :, 1].argmin()][0])
                drawpts.append(topmost)
                #frame=cv2.circle(frame,topmost,5,(0,0,255),-1)

    else:
        print("nope")
    for pt in drawpts:
        cv2.circle(frame,pt,5,(0,255,0),-1)
    cv2.imshow('res', res)
    cv2.imshow('drawing',frame)
    if cv2.waitKey(1) == 27:
        break
cap.release()
cv2.destroyAllWindows()
